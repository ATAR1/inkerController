unit TestStopwatch;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, System.Generics.Collections, Stopwatch, System.SysUtils,
  Winapi.Windows;

type
  // Test methods for class TStopwatch

  TestTStopwatch = class(TTestCase)
  strict private
    FStopwatch: TStopwatch;
  private
    HandlerCalledWith: Integer;
    HandlerWasRised: boolean;
    procedure StopwatchMeasuringEnded(i:integer);
  public
    procedure SetUp; override;
    procedure TearDown; override;

  published
    procedure TestTimeMeasuring;
    procedure TestStopRaiseHandlers;
  end;

implementation

procedure TestTStopwatch.SetUp;
begin
  FStopwatch := TStopwatch.Create;
end;

procedure TestTStopwatch.StopwatchMeasuringEnded(i: integer);
begin
  HandlerCalledWith:=i;
  HandlerWasRised:=true;
end;

procedure TestTStopwatch.TearDown;
begin
  FStopwatch.Free;
  FStopwatch := nil;
end;

procedure TestTStopwatch.TestTimeMeasuring;
var i:integer;
begin
  i:=100;
  FStopwatch.FGetTickCount:=function(): Cardinal
                            begin
                              Result:=i;
                            end;
  FStopwatch.Start;
  i:=1100;
  FStopwatch.Stop;
  CheckEquals(1000,FStopwatch.FTotalTicks);
end;

procedure TestTStopwatch.TestStopRaiseHandlers;
var i:integer;
begin
  FStopwatch.RegisterHandler(StopwatchMeasuringEnded);
  FStopwatch.FGetTickCount:=function: Cardinal
                            begin
                              Result:=i;
                            end;
  i:=223;
  FStopwatch.Start;
  i:=1000;
  FStopwatch.Stop;
  Check(HandlerWasRised,'Обработчик не вызывался!');
  CheckEquals(777,HandlerCalledWith);
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTStopwatch.Suite);
end.

