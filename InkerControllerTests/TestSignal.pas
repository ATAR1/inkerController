unit TestSignal;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Signal, System.Generics.Collections;

type
  // Test methods for class TSignal

  TestTSignal = class(TTestCase)
  strict private
    FSignal: TSignal;
    procedure SignalChangedHandler(value:boolean);
  private
    FSignalRaised: Boolean;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TeTestSetStateWhenStateChangedRaiseHandlers;
  end;

implementation

uses
  Delphi.Mocks;

procedure TestTSignal.SetUp;
begin
  FSignal := TSignal.Create;
end;

procedure TestTSignal.SignalChangedHandler(value: boolean);
begin
  FSignalRaised:=true;
end;

procedure TestTSignal.TearDown;
begin
  FSignal.Free;
  FSignal := nil;
end;

procedure TestTSignal.TeTestSetStateWhenStateChangedRaiseHandlers;
begin
  FSignal.SetState(False);
  FSignalRaised:=false;
  fsignal.RegisterHandler(SignalChangedHandler);

  FSignal.SetState(True);

  CheckTrue(FSignalRaised);
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTSignal.Suite);
end.

